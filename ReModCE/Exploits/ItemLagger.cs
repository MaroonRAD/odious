using ReMod.Core;
using ReMod.Core.Managers;
using ReMod.Core.UI.QuickMenu;
using System.Collections;
using UnityEngine;
using VRC.SDKBase;
using MelonLoader;
using ReModCE.EvilEyeSDK;

namespace ReModCE.Exploits
{
    class ItemLagger : ModComponent
    {
        public bool _ItemLagEnabled;
        private static ReMenuToggle _ItemLagToggled;
        public ItemLagger()
        {
        }
        // i just wanna get a build pushed out so this is commented out until i fix it
        //public override void OnUiManagerInit(UiManager uiManager)
        //{
        //    var exploitMenu = uiManager.MainMenu.GetCategoryPage("Exploits").GetCategory("Events");
        //    _ItemLagToggled = exploitMenu.AddToggle("Item Lag", "Attempts to lag players by using invalid data.", StartItemLag, _ItemLagEnabled);
        //}

        //public void StartItemLag(bool value)
        //{
        //    _ItemLagEnabled = value;
        //    _ItemLagToggled?.Toggle(value);

        //    if (_ItemLagEnabled)
        //    {
        //        MelonCoroutines.Start(PerformItemLag());
        //    }
        //    if (!_ItemLagEnabled)
        //    {
        //        MelonLogger.Msg($"Item Lag disabled!");
        //        MelonCoroutines.Stop(PerformItemLag());
        //    }
        //}
        //public IEnumerator PerformItemLag()
        //{
        //    MelonLogger.Msg($"Item lag initalized!");
        //    while (true)
        //    {
        //        if (_ItemLagEnabled)
        //        {
        //            foreach (VRC.SDKBase.VRC_Pickup VRCPickup in UnityEngine.Object.FindObjectsOfType<VRC.SDKBase.VRC_Pickup>())
        //            {
        //                Networking.LocalPlayer.TakeOwnership(VRCPickup.gameObject);
        //                Transform _transform = PlayerWrapper.LocalVRCPlayer().transform;
        //                VRCPickup.transform.position = PlayerWrapper.LocalPlayer().transform.position + new Vector3(0f, 0.35f, 0f);
        //                VRCPickup.transform.position = PlayerWrapper.LocalPlayer().transform.position + new Vector3(9.998E+07f, 9.998E+07f, 9.998E+07f);
        //            }
        //        }
        //        yield return new WaitForSeconds(0.1f);
        //        if(!_ItemLagEnabled)
        //        {
        //            yield break;
        //        }
        //    }
        //}

    }
}
