using ReMod.Core;
using ReMod.Core.Managers;
using ReMod.Core.UI.QuickMenu;
using System.Collections;
using UnityEngine;
using VRC.SDKBase;
using MelonLoader;
using ReModCE.EvilEyeSDK;

namespace ReModCE.Exploits
{
    class ItemLagger : ModComponent
    {
        public bool _ItemLagEnabled;
        private static ReMenuToggle _ItemLagToggled;
        public ItemLagger()
        {
        }
        public override void OnUiManagerInit(UiManager uiManager)
        {
            var exploitMenu = uiManager.MainMenu.GetCategoryPage("Exploits").GetCategory("Events");
            _ItemLagToggled = exploitMenu.AddToggle("Item Lag", "Lags players by repeatedly respawning objects.", StartItemLag, _ItemLagEnabled);
        }

        public void StartItemLag(bool value)
        {
            _ItemLagEnabled = value;
            _ItemLagToggled?.Toggle(value);

            if (_ItemLagEnabled)
            {
                MelonLogger.Msg($"Item Lag enabled!");
                MelonCoroutines.Start(PerformItemLag());
                MelonCoroutines.Start(InfinitePickups());
            }
            if (!_ItemLagEnabled)
            {
                MelonLogger.Msg($"Item Lag disabled!");
                MelonCoroutines.Stop(PerformItemLag());
                MelonCoroutines.Stop(InfinitePickups());
            }
        }
        public IEnumerator PerformItemLag()
        {
            while (_ItemLagEnabled)
            {
                foreach (VRC.SDKBase.VRC_Pickup VRC_Pickup in UnityEngine.Object.FindObjectsOfType<VRC.SDKBase.VRC_Pickup>())
                {
                    Networking.LocalPlayer.TakeOwnership(VRC_Pickup.gameObject);
                    VRC_Pickup.transform.position = PlayerWrapper.LocalPlayer().transform.position + new Vector3(0f, 0.35f, 0f);
                }
                yield return new WaitForSeconds(0.3f);
            }
            yield break;
        }


        // this was (probably) stolen from emod, thanks edwardus for telling me abt it
        public IEnumerator InfinitePickups()
        {
            while (_ItemLagEnabled)
            {
                foreach (VRC.SDKBase.VRC_Pickup VRC_Pickup in UnityEngine.Object.FindObjectsOfType<VRC.SDKBase.VRC_Pickup>())
                {
                    Networking.LocalPlayer.TakeOwnership(VRC_Pickup.gameObject);

                    // thanks edwardus <3
                    VRC_Pickup.transform.position = (new Vector3(PlayerWrapper.LocalVRCPlayer().transform.position.x, 9.998E+07f, PlayerWrapper.LocalVRCPlayer().transform.position.z));
                }
                yield return new WaitForSeconds(0.3f);
            }
            yield break;
        }
    }
}
